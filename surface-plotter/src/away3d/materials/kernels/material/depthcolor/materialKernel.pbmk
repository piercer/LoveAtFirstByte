<languageVersion : 1.0;>
material kernel DepthMaterialKernel
<
    namespace : "com.li.minimole";
    vendor    : "Li";
    version   : 1;
    description : "Darkens a solid color according to distance to the camera.";
>
{
    // Inputs.
    input vertex float4 vertexPosition
    <
        id: "PB3D_POSITION";
    >;

    // Parameters.
    parameter float4x4 worldTransform;
    parameter float4 cameraPosition;
    parameter float minZ;
    parameter float maxZ;

    // Interpolated.
    interpolated float4 interpolatedColor;

    // Output.
    output float4 result;

    void evaluateVertex()
    {
        // Transform vertex position to world space.
        float4 vertexPosWorld = vertexPosition * worldTransform;

        // Get vertex to camera distance.
        float4 vertexToCamera = vertexPosWorld - cameraPosition;
        float len = length(vertexToCamera);

        // Translate distance to fog range.
        len = len + minZ;
        // We need to use 2 lines here because there cannot be 2 constants in the same operation.
        float getMaxZ = maxZ;
        float range = getMaxZ - minZ;

        // Calculate color factor
        float fac = len/range;
        fac = 1.0 - clamp(fac, 0.0, 1.0);

        interpolatedColor = float4(fac, fac, fac, 1.0);
    }

    void evaluateFragment()
    {
        result = interpolatedColor;
    }
}